<?php

namespace app\modules\v2\controllers;

use Yii;

class RoutesController extends RuraApiController
{

    public function actionFindRoutes($company = null, $date=null)
    {   
        if (empty($date) ||empty($company))
                return [['status_code'=>500, 'routes'=>'', 'error'=>'Missing parameter']];

        $tenant = Yii::$app->db->createCommand('SELECT `database` FROM TenantMapping WHERE rura_name  = :tenant')
            ->bindValue(':tenant', $company)
            ->queryScalar();

        if(empty($tenant))
        {
            return [['status_code'=>600, 'routes'=>'', 'error'=>'ticketing system']];
        }
        else
        {
            //Never use sprintf with input that comes from user. $tenant is generated by us and we trust it to be safe and hence the use with sprintf
            $sql = sprintf("SELECT DISTINCT p.start AS source, p.end AS destination, p.currency as currency, SUBSTR(pr.dept_time,4,2) AS schedule, price, DATE(FROM_UNIXTIME(p.updated_at)) AS date FROM %s.Pricing p INNER JOIN %s.PlannedRoutes pr ON p.route = pr.route INNER JOIN %s.Routes r ON  p.start = r.start AND p.end = r.end AND p.route = r.id WHERE pr.dept_date =:date order by pr.route,schedule", $tenant, $tenant, $tenant);
		

           $routes =$this->getDb($tenant)->createCommand($sql)
                ->bindValues([
                    ':date' =>$date
                ])
                ->queryAll();
		
            $result = [];
            foreach ($routes as $key=>$value) 
            {
               // $route['company'] = $company;
		
               // $result[] = $route;

	$result["{$key} "]= ['source' => $value['source'],'destination'=>$value['destination'],'currency'=>$value['currency'],'schedule' => $value['schedule'],'price'=>$value['price'],'date'=>$value['date'], 'company'=>$company];



            }

            if (empty($result))
            return [['status_code'=>400, 'routes'=>'', 'error'=>'Company has no routes']];
            

            return ['status_code'=>200, 'routes'=>$result];    
        }
    }
}
