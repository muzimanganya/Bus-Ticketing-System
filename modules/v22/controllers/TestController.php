<?php

namespace app\modules\v2\controllers;

use app\models\Ticket;
use app\models\TenantModel;
use Yii;

class TestController extends RuraApiController
{
    
   
    
    public function actionTicket($date, $company)
    {

       if(empty($company) ||  empty($date) /*|| empty($price) || empty($schedule)*/)
                return [['status_code'=>500, 'routes'=>'', 'error'=>'Missing parameter']];

        $tenant = Yii::$app->db->createCommand('SELECT `database` FROM TenantMapping WHERE rura_name  = :tenant')
            ->bindValue(':tenant', $company)
            ->queryScalar();

        if(empty($tenant))
        {
            return [['status_code'=>600, 'routes'=>'', 'error'=>'ticketing system']];
        }
        else
        {
            //Never use sprintf with input that comes from user. $tenant is generated by us and we trust it to be safe and hence the use with sprintf
            $sql = sprintf("SELECT t.ticket as ticket,machine_serial,s.name as updated_by , SUBSTR(t.customer,2,10) as customer,c.name as cname,route ,start,end,currency,price,bus,dept_date,dept_time,t.updated_at as updated_at FROM %s.Tickets t INNER JOIN %s.Customers c on t.customer= c.mobile INNER JOIN volcano_shared.Staffs s on s.mobile=t.updated_by where is_promo=0 and rura=1 AND t. dept_date=:date order by t.route,t.dept_time", $tenant,$tenant);
	
		// $sql = sprintf("SELECT count(t.id) as Tickets FROM %s.Tickets t INNER JOIN %s.Customers c on t.customer= c.mobile INNER JOIN volcano_shared.Staffs s on s.mobile=t.updated_by where is_promo=0 and rura=1 AND t. dept_date=:date order by t.route,t.dept_time ", $tenant,$tenant);



            $routes =$this->getDb($tenant)->createCommand($sql)
                ->bindValues([
                    ':date' =>$date
		    
                ])
                ->queryAll();

            $result = null;
            foreach ($routes as $key=>$value) 
	    
            {
		
 
        	//$result["{$route} "]= ['customer_id' => $value['customer'], 'pay_method'=>'POS','pos_id'=>$value['machine_serial'],'sale_time'=>(new \DateTime())->setTimestamp($value['updated_at'])->format('Y-m-d H:i:s')];
		//$result["{$key} "]= ['Tickets' => $value['Tickets']];
		//$result["{$key} "]= ['customer_id' => $value['customer'], 'pay_method'=>'POS','pos_id'=>$value['machine_serial']];
		$result=$value['ticket'];
		$sql='Update Tickets set rura=0 WHERE ticket=:code';
		$this->getDb($tenant)->createCommand($sql)
                ->bindValues([
                    ':code' =>$result
		    
                ])
                ->execute();

		/*$params = array(
   		 "contact_id" => $contactId,
   		 "id" => $id
		);*/



            }

            if (empty($result))
            return [['status_code'=>400, 'tickets'=>'', 'error'=>'ticket not found']];
            

            return ['status_code'=>200, 'tickets'=>$result];   
        } 
 
	
  }
}

